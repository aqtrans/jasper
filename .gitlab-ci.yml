image: golang:latest

variables:
  DEV_SSH: "golang@leela.es.gy"
  PROD_SSH: "golang@frink.es.gy"

cache:
  key: "$CI_BUILD_REF_NAME"
  paths:
    - vendor/

before_script:
  - ln -s /builds /go/src/jba.io
  - cd /go/src/jba.io/go/jasper
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - ssh-add <(echo "$SSH_PRIVATE_KEY")
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo "$SSH_SERVER_HOSTKEYS" > ~/.ssh/known_hosts'

stages:
  - install-environment
  - build
  - test
  - deploy  

install-go:
  stage: install-environment
  script:
    - go version
    - echo $PATH
    - echo $GOPATH
    - go env
    - which go

build-my-project:
  stage: build
  script:
    - go get -u github.com/kardianos/govendor
    - govendor sync
    - go get -d
    - go build -o ./jasper
  artifacts:
    paths:
      - jasper
      - vendor/

test-my-project:
  stage: test
  coverage: '/coverage: \d+\.\d+/'
  script:
    - go get -d  
    - go test -v
    - go test -race
    - go test -cover

deploy_staging:
  stage: deploy
  script:
    - apt-get update -y && apt-get install -y rsync
    # Remove previous backup of app
    - ssh $DEV_SSH /bin/bash -c 'if [ -f $CI_PROJECT_NAME.old ]; then rm -rfv $CI_PROJECT_NAME.old; fi'
    # Stop app, to release DB locks 
    - ssh $DEV_SSH sudo systemctl stop golang@$CI_PROJECT_NAME
    # Backup old app
    - ssh $DEV_SSH /bin/bash -c 'if [ -f $CI_PROJECT_NAME ]; then mv -v $CI_PROJECT_NAME{,.old}; fi'
    # rsync to fresh folder
    - rsync -av --exclude data/ --exclude vendor/ --exclude http.log ./ $DEV_SSH:$CI_PROJECT_NAME
    # Restart app
    - ssh $DEV_SSH sudo systemctl start golang@$CI_PROJECT_NAME
    #- /bin/bash ./deploy.sh golang@leela.es.gy golang@$CI_PROJECT_NAME $CI_PROJECT_NAME
  environment:
    name: staging
    url: http://jasper.leela.es.gy
  when: manual

deploy_prod:
  stage: deploy
  script:
    - apt-get update -y && apt-get install -y rsync
    # Remove previous backup of app
    - ssh $PROD_SSH /bin/bash -c 'if [ -f $CI_PROJECT_NAME.old ]; then rm -rfv $CI_PROJECT_NAME.old; fi'
    # Stop app, to release DB locks 
    - ssh $PROD_SSH sudo systemctl stop golang@$CI_PROJECT_NAME
    # Backup old app
    - ssh $PROD_SSH /bin/bash -c 'if [ -f $CI_PROJECT_NAME ]; then mv -v $CI_PROJECT_NAME{,.old}; fi'
    # rsync to fresh folder
    - rsync -av --exclude data/ --exclude vendor/ --exclude http.log ./ $PROD_SSH:$CI_PROJECT_NAME
    # Restart app
    - ssh $PROD_SSH sudo systemctl start golang@$CI_PROJECT_NAME
    #- /bin/bash ./deploy.sh golang@frink.es.gy golang@$CI_PROJECT_NAME $CI_PROJECT_NAME
  environment:
    name: production
    url: https://thatsapaddl.in
  only:
    - master
