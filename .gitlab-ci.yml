image: golang:latest

cache:
  key: "$CI_BUILD_REF_NAME"
  paths:
    - vendor/

before_script:
  - ln -s /builds /go/src/jba.io
  - cd /go/src/jba.io/go/jasper
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - ssh-add <(echo "$SSH_PRIVATE_KEY")
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo "$SSH_SERVER_HOSTKEYS" > ~/.ssh/known_hosts'

stages:
  - install-environment
  - build
  - test
  - deploy  

install-go:
  stage: install-environment
  script:
    - go version
    - echo $PATH
    - echo $GOPATH
    - go env
    - which go

build-my-project:
  stage: build
  script:
    - curl -o dep -sL https://github.com/golang/dep/releases/download/v0.3.2/dep-linux-amd64
    - chmod +x dep
    - ./dep ensure
    - go get -d
    - go build -o ./jasper
  artifacts:
    paths:
      - jasper

test-my-project:
  stage: test
  coverage: '/coverage: \d+\.\d+/'
  script:
    - go get -d  
    - go test -v
    - go test -race
    - go test -cover

deploy_staging:
  stage: deploy
  variables:
    DEPLOY_HOST: 'golang@rick.jba.io'
  script:
    - apt-get update -y && apt-get install -y rsync
    # Remove previous backup of app
    - ssh $DEPLOY_HOST /bin/bash -c "'if test -d $CI_PROJECT_NAME.old; then rm -rfv $CI_PROJECT_NAME.old; fi'"
    # Stop app, to release DB locks 
    - ssh $DEPLOY_HOST sudo systemctl stop golang@$CI_PROJECT_NAME
    # Backup old app
    - ssh $DEPLOY_HOST /bin/bash -c "'if test -d $CI_PROJECT_NAME; then mv -v $CI_PROJECT_NAME{,.old}; fi'"
    # rsync to fresh folder
    - rsync -av --exclude data/ --exclude vendor/ --exclude http.log ./ $DEPLOY_HOST:$CI_PROJECT_NAME
    # Restart app
    - ssh $DEPLOY_HOST sudo systemctl start golang@$CI_PROJECT_NAME
  environment:
    name: staging
    url: http://jasper.rick.jba.io
  when: manual

deploy_prod:
  stage: deploy
  variables:
    DEPLOY_HOST: 'golang@frink.jba.io'
  script:
    - echo $DEPLOY_HOST
    - echo $CI_PROJECT_NAME
    - apt-get update -y && apt-get install -y rsync
    # Remove previous backup of app
    - ssh $DEPLOY_HOST /bin/bash -c "'if test -d $CI_PROJECT_NAME.old; then rm -rfv $CI_PROJECT_NAME.old; fi'"
    # Stop app, to release DB locks 
    - ssh $DEPLOY_HOST sudo systemctl stop golang@$CI_PROJECT_NAME
    # Backup old app
    - ssh $DEPLOY_HOST /bin/bash -c "'if test -d $CI_PROJECT_NAME; then mv -v $CI_PROJECT_NAME{,.old}; fi'"
    # rsync to fresh folder
    - rsync -av --exclude data/ --exclude vendor/ --exclude http.log ./ $DEPLOY_HOST:$CI_PROJECT_NAME
    # Restart app
    - ssh $DEPLOY_HOST sudo systemctl start golang@$CI_PROJECT_NAME
  environment:
    name: production
    url: https://thatsapaddl.in
  only:
    - master
